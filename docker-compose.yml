# Full Docker Compose file for Android App Project Infrastructure
# --- OPTIMIZED STARTING POINTS FOR 8GB RAM HOST ---
# Generated on: 2025-04-04
# WARNING: Monitor resource usage closely and run fewer services concurrently.

version: '3.8'

services:
  # --- Original Services ---

  pocketbase:
    image: pocketbase/pocketbase:latest
    ports:
      - "8090:8090"
    volumes:
      - ./data:/pb_data
    command: serve --http 0.0.0.0:8090
    environment:
      - PB_DATA_DIR=/pb_data
    deploy: # Resource settings for 8GB host
      resources:
        limits:
          memory: 256M
        reservations:
          memory: 64M
    restart: unless-stopped

  sentry: # Assumes light usage / default SQLite backend
    image: getsentry/sentry:latest
    ports:
      - "9000:9000"
    environment:
      - SENTRY_SECRET_KEY=your_sentry_secret_key_please_change # Use secrets!
    volumes:
      - sentry_data:/var/lib/sentry
    deploy: # Resource settings for 8GB host
      resources:
        limits:
          memory: 1G # Reduced limit
        reservations:
          memory: 256M # Reduced reservation
    restart: unless-stopped

  jenkins:
    image: jenkins/jenkins:lts
    ports:
      - "8080:8080"
      - "50000:50000"
    volumes:
      - ./jenkins_home:/var/jenkins_home
    environment:
      # Reduced Heap for 8GB host + original flag
      - JAVA_OPTS=-Xms512m -Xmx1g -Djenkins.install.runSetupWizard=false
    deploy: # Resource settings for 8GB host
      resources:
        limits:
          memory: 1.5G # Reduced limit (allows ~1G heap + overhead)
        reservations:
          memory: 768M # Reduced reservation
    restart: unless-stopped

  openai_api_reminder: # Renamed placeholder
    image: busybox:1.35.0-uclibc # Ensure this tag is valid or replace with a correct one
    command: '/bin/sh -c "echo Reminder: External AI API integration happens in client/backend code."'
    container_name: external-ai-api-reminder
    deploy: # Resource settings for 8GB host
      resources:
        limits:
          memory: 32M
        reservations:
          memory: 16M
    restart: unless-stopped

  launchdarkly:
    image: launchdarkly/ld-relay:latest
    ports:
      - "8030:8030"
    environment:
      - LD_CLIENT_SIDE_ID=your_launchdarkly_client_side_id # Use secrets!
      - LD_API_KEY=your_launchdarkly_api_key # Use secrets!
    volumes:
      - launchdarkly_data:/var/lib/launchdarkly
    deploy: # Resource settings for 8GB host
      resources:
        limits:
          memory: 192M
        reservations:
          memory: 64M
    restart: unless-stopped

  proxy: # Nginx
    image: nginx:latest
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - pocketbase
      - jenkins
      - sentry
    deploy: # Resource settings for 8GB host
      resources:
        limits:
          memory: 128M
        reservations:
          memory: 32M
    restart: unless-stopped

  # --- Added Open Source Services ---

  sonarqube:
    image: sonarqube:lts-community
    ports:
      - "9001:9000"
    volumes:
      - sonarqube_data:/opt/sonarqube/data
      - sonarqube_extensions:/opt/sonarqube/extensions
      - sonarqube_logs:/opt/sonarqube/logs
    environment:
      - SONAR_ES_BOOTSTRAP_CHECKS_DISABLE=true
      # Note: May need specific SONAR_WEB_JAVAOPTS, SONAR_CE_JAVAOPTS, SONAR_SEARCH_JAVAOPTS
      # to strictly enforce low memory usage on 8GB host. Performance will be impacted.
    deploy: # Resource settings for 8GB host
      resources:
        limits:
          memory: 2G # Reduced limit - expect slowness/swapping
        reservations:
          memory: 1G # Reduced reservation - bare minimum
    restart: unless-stopped

  nexus:
    image: sonatype/nexus3:latest
    ports:
      - "8081:8081"
    volumes:
      - nexus_data:/nexus-data
    # Reduced Heap for 8GB host - check Nexus docs for exact env var if needed
    environment:
       - INSTALL4J_ADD_VM_PARAMS=-Xms512m -Xmx768m -XX:MaxDirectMemorySize=1G
    deploy: # Resource settings for 8GB host
      resources:
        limits:
          memory: 1.5G # Reduced limit
        reservations:
          memory: 512M # Reduced reservation (aligns loosely with ~768m heap)
    restart: unless-stopped

  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
      - '--web.enable-lifecycle'
      - '--storage.tsdb.retention.time=15d' # Example: Reduce retention to save space/memory
      - '--storage.tsdb.retention.size=2GB' # Example: Limit disk size
    deploy: # Resource settings for 8GB host
      resources:
        limits:
          memory: 1G # Reduced limit
        reservations:
          memory: 256M # Reduced reservation
    restart: unless-stopped

  grafana:
    image: grafana/grafana-oss:latest
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
    environment:
      - GF_USERS_ALLOW_SIGN_UP=false
    depends_on:
      - prometheus
    deploy: # Resource settings for 8GB host
      resources:
        limits:
          memory: 384M # Reduced limit
        reservations:
          memory: 128M # Reduced reservation
    restart: unless-stopped

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.13.0
    ports:
      - "9200:9200"
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false # Dev only!
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m" # Reduced Heap for 8GB host
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    deploy: # Resource settings for 8GB host
      resources:
        limits:
          memory: 1.2G # Reduced limit (allows 512M heap + overhead)
        reservations:
          memory: 768M # Reduced reservation
    restart: unless-stopped

  logstash:
    image: docker.elastic.co/logstash/logstash:8.13.0
    ports:
      - "5044:5044"
      - "9600:9600"
    volumes:
      - ./logstash-pipeline/:/usr/share/logstash/pipeline/:ro
    environment:
      - "LS_JAVA_OPTS=-Xms256m -Xmx256m" # Reduced Heap for 8GB host
    depends_on:
      - elasticsearch
    deploy: # Resource settings for 8GB host
      resources:
        limits:
          memory: 640M # Reduced limit (allows 256M heap + overhead)
        reservations:
          memory: 384M # Reduced reservation
    restart: unless-stopped

  kibana:
    image: docker.elastic.co/kibana/kibana:8.13.0
    ports:
      - "5601:5601"
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    volumes:
       - kibana_data:/usr/share/kibana/data
    depends_on:
      - elasticsearch
    deploy: # Resource settings for 8GB host
      resources:
        limits:
          memory: 768M # Reduced limit
        reservations:
          memory: 256M # Reduced reservation
    restart: unless-stopped

  mkdocs:
    image: python:3.9-slim
    ports:
      - "8000:8000"
    volumes:
      - ./docs:/docs
      - ./mkdocs.yml:/mkdocs.yml:ro
    working_dir: /
    command: /bin/sh -c "pip install mkdocs mkdocs-material && mkdocs serve -a 0.0.0.0:8000 -f /mkdocs.yml"
    deploy: # Resource settings for 8GB host
      resources:
        limits:
          memory: 192M
        reservations:
          memory: 64M
    restart: unless-stopped


# --- Named Volumes Definition ---
volumes:
  sentry_data:
  launchdarkly_data:
  sonarqube_data:
  sonarqube_extensions:
  sonarqube_logs:
  nexus_data:
  prometheus_data:
  grafana_data:
  elasticsearch_data:
  kibana_data:

# --- Network Definition (Recommended) ---
# Using a custom network is generally good practice.
networks:
   app_network:
     driver: bridge

# --- Add this to EACH service if using custom network ---
# networks:
#   - app_network